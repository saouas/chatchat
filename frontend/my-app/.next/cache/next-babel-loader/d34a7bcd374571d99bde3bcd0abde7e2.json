{"ast":null,"code":"var _jsxFileName = \"/Users/aouassalim/Desktop/Salim/nodejs_practice/openclassrooms_02/frontend/my-app/components/chat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { relative } from 'path';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport io from 'socket.io-client';\nimport Cookies from 'universal-cookie';\nimport moment from 'moment';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\nconst CSS_SCROLL = css({\n  height: 400,\n  overflow: `auto`\n});\nconst styles = {\n  container: {\n    backgroundColor: \"white\",\n    height: \"570px\",\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"6px\",\n    textAlign: \"center\",\n    maxWidth: \"600px\",\n    minWidth: \"20%\",\n    padding: \"0\"\n  },\n  topbar: {\n    position: \"relative\",\n    backgroundColor: \"#3f51b5\",\n    border: \"2px solid white\",\n    borderRadius: \"6px\",\n    height: \"60px\",\n    width: \"100%\"\n  },\n  pastille: {\n    color: \"#a8ffa8\"\n  },\n  pseudo: {\n    color: \"white\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n    paddingLeft: \"30px\",\n    marginTop: \"15px\",\n    fontSize: \"20px\"\n  },\n  close: {\n    position: \"absolute\",\n    top: \"0%\",\n    right: \"0%\",\n    height: \"15px\",\n    width: \"15px\",\n    paddingTop: \"5px\",\n    paddingRight: \"5px\"\n  },\n  sub_container: {\n    position: \"absolute\",\n    padding: \"0\"\n  },\n  hr: {\n    padding: \"0\"\n  },\n  input_container: {\n    position: \"relative\",\n    padding: \"0\"\n  },\n  input: {\n    position: \"absolute\",\n    left: \"0%\",\n    width: \"68%\",\n    paddingLeft: \"10px\",\n    marginRight: \"20px\"\n  },\n  button: {\n    position: \"absolute\",\n    right: \"0%\",\n    marginRight: \"10px\",\n    height: \"76px\",\n    width: \"25%\"\n  },\n  messages: {\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"400px\",\n    overflowX: \"hidden\"\n  },\n  incomingMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"#1982FC\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  adminMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"rgb(236, 236, 236)\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  myMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"#43CC47\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  incomingMessageList: {\n    height: \"100%\",\n    marginTop: \"5px\"\n  },\n  myMessageList: {\n    height: \"100%\",\n    marginRight: \"10px\"\n  },\n  pseudoMymessage: {\n    position: \"absolute\",\n    marginTop: \"20px\",\n    color: \"#a2a2a2\",\n    fontSize: \"15px\",\n    marginLeft: \"-40px\"\n  },\n  pseudoIncomingMessage: {\n    position: \"absolute\",\n    marginTop: \"-40px\",\n    color: \"#a2a2a2\",\n    fontSize: \"15px\",\n    marginLeft: \"110px\"\n  },\n  itemIncomingMessage: {\n    position: \"relative\",\n    marginLeft: \"20px\",\n    marginBottom: \"-60px\"\n  },\n  itemMyMessage: {\n    position: \"relative\",\n    marginRight: \"50px\",\n    minHeight: \"0px\"\n  },\n  containerItemMyMessage: {\n    position: \"absolute\",\n    right: \"0%\"\n  }\n};\nlet socket;\nconst cookies = new Cookies();\nmoment.locale('fr');\n\nconst Chat_component = ({\n  location\n}) => {\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: room,\n    1: setRoom\n  } = useState(\"\");\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState([]);\n  const ENDPOINT = \"localhost:8080\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = router.query;\n    socket = io(ENDPOINT);\n\n    if (name != undefined && room != undefined) {\n      setName(name);\n      setRoom(room);\n      let tmp_date = new Date(moment().add(2, 'hours').toDate());\n      cookies.set('name', name, {\n        expires: tmp_date\n      });\n      cookies.set('room', room, {\n        expires: tmp_date\n      });\n      let namedStored = cookies.get('name');\n      let roomStored = cookies.get('room');\n      socket.emit('join', {\n        name: namedStored,\n        room: roomStored\n      }, () => {});\n    }\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, router]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = e => {\n    event.preventDefault();\n\n    if (message && room != undefined && name != undefined) {\n      socket.emit('sendMessage', {\n        user: name,\n        text: message\n      }, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    style: styles.sub_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    style: styles.topbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: styles.pseudo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    style: styles.pastille,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 46\n    }\n  }, \"\\u2022 \"), name), __jsx(\"img\", {\n    style: styles.close,\n    src: \"/images/close.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    container: true,\n    style: styles.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, __jsx(ScrollToBottom, {\n    id: \"scrollToBottom\",\n    className: CSS_SCROLL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    style: styles.incomingMessageList,\n    direction: \"column\",\n    spacing: 8,\n    wrap: \"nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, messages.map((message, i) => {\n    if (message.user == name.trim().toLowerCase()) {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `inboxMessage${i}`,\n        style: styles.itemIncomingMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.incomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 37\n        }\n      }, message.text), __jsx(Grid, {\n        key: `${i}4`,\n        item: true,\n        style: styles.pseudoIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 49\n        }\n      }, message.user)));\n    } else if (message.user == \"admin\") {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `inboxMessage${i}`,\n        style: styles.itemIncomingMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.adminMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 37\n        }\n      }, message.text), __jsx(Grid, {\n        key: `${i}4`,\n        item: true,\n        style: styles.pseudoIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 49\n        }\n      }, \"Admin\")));\n    } else {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `myMessage${i}`,\n        style: styles.itemMyMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemMyMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.pseudoMymessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 49\n        }\n      }, message.user), __jsx(Grid, {\n        item: true,\n        key: `${i}4`,\n        style: styles.myMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 49\n        }\n      }, message.text)));\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    style: styles.input_container,\n    fluid: \"true\",\n    diction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, __jsx(\"hr\", {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Message\",\n    multiline: true,\n    rows: 2,\n    variant: \"filled\",\n    style: styles.input,\n    onChange: e => setMessage(e.target.value),\n    value: message,\n    onKeyPress: e => e.key === \"Enter\" ? sendMessage(e) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    id: \"\",\n    label: \"Entrer\",\n    color: \"primary\",\n    size: \"large\",\n    variant: \"contained\",\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"Envoyer\"))))));\n};\n\nexport default Chat_component;","map":{"version":3,"sources":["/Users/aouassalim/Desktop/Salim/nodejs_practice/openclassrooms_02/frontend/my-app/components/chat.js"],"names":["Container","TextField","Button","Grid","relative","useEffect","useState","useRouter","io","Cookies","moment","ScrollToBottom","css","CSS_SCROLL","height","overflow","styles","container","backgroundColor","position","top","left","transform","borderRadius","textAlign","maxWidth","minWidth","padding","topbar","border","width","pastille","color","pseudo","paddingLeft","marginTop","fontSize","close","right","paddingTop","paddingRight","sub_container","hr","input_container","input","marginRight","button","messages","overflowY","display","flexDirection","overflowX","incomingMessage","minHeight","adminMessage","myMessage","incomingMessageList","myMessageList","pseudoMymessage","marginLeft","pseudoIncomingMessage","itemIncomingMessage","marginBottom","itemMyMessage","containerItemMyMessage","socket","cookies","locale","Chat_component","location","router","name","setName","room","setRoom","setMessages","message","setMessage","ENDPOINT","query","undefined","tmp_date","Date","add","toDate","set","expires","namedStored","get","roomStored","emit","off","on","sendMessage","e","event","preventDefault","user","text","map","i","trim","toLowerCase","containerItemIncomingMessage","target","value","key"],"mappings":"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","sourcesContent":["import Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { relative } from 'path';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\nimport io from 'socket.io-client';\nimport Cookies from 'universal-cookie'\nimport moment from 'moment';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\n\nconst CSS_SCROLL = css({\n    height: 400,\n    overflow: `auto`\n});\n\nconst styles = {\n    container: {\n        backgroundColor: \"white\",\n        height: \"570px\",\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        borderRadius: \"6px\",\n        textAlign: \"center\",\n        maxWidth: \"600px\",\n        minWidth: \"20%\",\n        padding: \"0\"\n    },\n    topbar: {\n        position: \"relative\",\n        backgroundColor: \"#3f51b5\",\n        border: \"2px solid white\",\n        borderRadius: \"6px\",\n        height: \"60px\",\n        width: \"100%\",\n    },\n    pastille: {\n        color: \"#a8ffa8\",\n    },\n    pseudo: {\n        color: \"white\",\n        position: \"absolute\",\n        top: \"0%\",\n        left: \"0%\",\n        paddingLeft: \"30px\",\n        marginTop: \"15px\",\n        fontSize: \"20px\"\n    },\n    close: {\n        position: \"absolute\",\n        top: \"0%\",\n        right: \"0%\",\n        height: \"15px\",\n        width: \"15px\",\n        paddingTop: \"5px\",\n        paddingRight: \"5px\"\n    },\n    sub_container: {\n        position: \"absolute\",\n        padding: \"0\"\n    },\n    hr: {\n        padding: \"0\",\n    },\n    input_container: {\n        position: \"relative\",\n        padding: \"0\",\n    },\n    input: {\n        position: \"absolute\",\n        left: \"0%\",\n        width:\"68%\",\n        paddingLeft: \"10px\",\n        marginRight: \"20px\",\n    },\n    button: {\n        position: \"absolute\",\n        right: \"0%\",\n        marginRight: \"10px\",\n        height: \"76px\",\n        width:\"25%\"\n    },\n    messages: {\n        overflowY: \"scroll\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"400px\",\n        overflowX: \"hidden\"\n    },\n    incomingMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"#1982FC\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    adminMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"rgb(236, 236, 236)\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    myMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"#43CC47\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    incomingMessageList: {\n        height: \"100%\",\n        marginTop: \"5px\"\n    },\n    myMessageList: {\n        height: \"100%\",\n        marginRight: \"10px\"\n    },\n    pseudoMymessage: {\n        position: \"absolute\",\n        marginTop: \"20px\",\n        color: \"#a2a2a2\",\n        fontSize: \"15px\",\n        marginLeft: \"-40px\"\n\n    },\n    pseudoIncomingMessage: {\n        position: \"absolute\",\n        marginTop: \"-40px\",\n        color: \"#a2a2a2\",\n        fontSize: \"15px\",\n        marginLeft: \"110px\"\n    },\n    itemIncomingMessage: {\n        position: \"relative\",\n        marginLeft: \"20px\",\n        marginBottom: \"-60px\"\n    },\n    itemMyMessage: {\n        position: \"relative\",\n        marginRight: \"50px\",\n        minHeight: \"0px\",\n    },\n    containerItemMyMessage: {\n        position: \"absolute\",\n        right: \"0%\"\n    }\n}\n\nlet socket;\nconst cookies = new Cookies();\nmoment.locale('fr');\n\nconst Chat_component = ({location}) => {\n    const router = useRouter();\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState([]);\n    const ENDPOINT = \"localhost:8080\";\n\n    useEffect(() => {\n        const { name,room } = router.query;\n        socket = io(ENDPOINT);\n \n        if((name != undefined) && (room != undefined)){\n            setName(name);\n            setRoom(room);\n\n            let tmp_date = new Date(moment().add(2, 'hours').toDate());\n            cookies.set('name',name,{expires: tmp_date});\n            cookies.set('room',room,{expires: tmp_date});\n            \n            let namedStored = cookies.get('name');\n            let roomStored = cookies.get('room');\n\n            socket.emit('join', { name: namedStored, room: roomStored }, () => {\n            \n            })\n        }\n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        };\n\n    }, [ENDPOINT,router]);\n\n    useEffect(()=>{\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n\n    }, [messages]);\n\n    const sendMessage = (e) => {\n        event.preventDefault();\n\n        if(message && room != undefined && name != undefined){\n            socket.emit('sendMessage', ( {user: name, text: message} ), () => {\n                setMessage('');\n            });\n            \n       }\n    }\n\n    return (<div>\n        <Container style={styles.container}>\n            <Container style={styles.sub_container}>\n                <Container style={styles.topbar}>\n                    <p style={styles.pseudo}><span style={styles.pastille}>• </span>{name}</p>\n                    <img style={styles.close} src=\"/images/close.png\">\n                    </img>\n                </Container>\n\n                <Grid container style={styles.messages}>\n                <ScrollToBottom id=\"scrollToBottom\" className={ CSS_SCROLL }>\n\n                    <Grid container style={styles.incomingMessageList} direction=\"column\" spacing={8} wrap=\"nowrap\">\n                            {messages.map((message, i) => {\n                                    if(message.user == name.trim().toLowerCase()){\n                                        return( <Grid item key={i} id={`inboxMessage${i}`} style={styles.itemIncomingMessage} xs={12}>\n                                            <Grid container key={`${i}2`} style={styles.containerItemIncomingMessage}>\n                                    <Grid item key={`${i}3`} style={styles.incomingMessage}>{message.text}</Grid>\n                                                <Grid key={`${i}4`} item style={styles.pseudoIncomingMessage}>{message.user}</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                    else if (message.user == \"admin\"){\n                                        return( <Grid item key={i} id={`inboxMessage${i}`} style={styles.itemIncomingMessage} xs={12}>\n                                            <Grid container key={`${i}2`} style={styles.containerItemIncomingMessage}>\n                                    <Grid item key={`${i}3`} style={styles.adminMessage}>{message.text}</Grid>\n                                                <Grid key={`${i}4`} item style={styles.pseudoIncomingMessage}>Admin</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                    else{\n                                        return (<Grid item  key={i} id={`myMessage${i}`} style={styles.itemMyMessage} xs={12}>\n                                            <Grid item container key={`${i}2`} style={styles.containerItemMyMessage}>\n                                                <Grid item key={`${i}3`} style={styles.pseudoMymessage}>{message.user}</Grid>\n                                                <Grid item key={`${i}4`} style={styles.myMessage}>{message.text}</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                })}\n                    </Grid>\n\n                    </ScrollToBottom>\n\n                </Grid>\n\n                <Grid container style={styles.input_container} fluid=\"true\"  diction=\"row\" >\n                    <hr style={styles.hr}></hr>\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Message\"\n                            multiline\n                            rows={2}\n                            variant=\"filled\"\n                            style={styles.input}\n                            onChange={(e) => setMessage(e.target.value)}\n                            value={message}\n                            onKeyPress={(e) => (e.key === \"Enter\") ? sendMessage(e) : null }\n                        />\n                    </Grid>\n                    \n                    <Grid item xs={6}>\n                        <Button\n                            id=\"\"\n                            label=\"Entrer\"\n                            color=\"primary\"\n                            size=\"large\"\n                            variant=\"contained\"\n                            style={styles.button}\n                        >Envoyer</Button>\n                    </Grid>\n                    \n\n                </Grid>\n\n            </Container>\n        </Container>\n    </div>)\n};\n\nexport default Chat_component;"]},"metadata":{},"sourceType":"module"}