{"ast":null,"code":"var _jsxFileName = \"/Users/aouassalim/Desktop/Salim/nodejs_practice/openclassrooms_02/frontend/my-app/components/chat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\nimport Users_component from './../components/users';\nconst CSS_SCROLL = css({\n  height: 400,\n  overflow: `auto`,\n  overflowX: `hidden`\n});\nconst styles = {\n  container: {\n    backgroundColor: \"white\",\n    height: \"570px\",\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"6px\",\n    textAlign: \"center\",\n    maxWidth: \"600px\",\n    minWidth: \"20%\",\n    padding: \"0\"\n  },\n  topbar: {\n    position: \"relative\",\n    backgroundColor: \"#3f51b5\",\n    border: \"2px solid white\",\n    borderRadius: \"6px\",\n    height: \"60px\",\n    width: \"100%\"\n  },\n  pastille: {\n    color: \"#a8ffa8\"\n  },\n  pseudo: {\n    color: \"white\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n    paddingLeft: \"30px\",\n    marginTop: \"15px\",\n    fontSize: \"20px\"\n  },\n  close: {\n    position: \"absolute\",\n    top: \"0%\",\n    right: \"0%\",\n    height: \"15px\",\n    width: \"15px\",\n    paddingTop: \"5px\",\n    paddingRight: \"5px\"\n  },\n  sub_container: {\n    position: \"absolute\",\n    padding: \"0\"\n  },\n  hr: {\n    padding: \"0\"\n  },\n  input_container: {\n    position: \"relative\",\n    padding: \"0\"\n  },\n  input: {\n    position: \"absolute\",\n    left: \"0%\",\n    width: \"68%\",\n    paddingLeft: \"10px\",\n    marginRight: \"20px\"\n  },\n  button: {\n    position: \"absolute\",\n    right: \"0%\",\n    marginRight: \"10px\",\n    height: \"76px\",\n    width: \"25%\"\n  },\n  messages: {\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"400px\",\n    overflowX: \"hidden\"\n  },\n  incomingMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"#1982FC\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  adminMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"rgb(236, 236, 236)\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  myMessage: {\n    borderRadius: \"8px\",\n    backgroundColor: \"#43CC47\",\n    minHeight: \"20px\",\n    width: \"100px\",\n    textAlign: \"center\",\n    padding: \"20px 5px 20px 5px\"\n  },\n  incomingMessageList: {\n    height: \"100%\",\n    marginTop: \"5px\"\n  },\n  myMessageList: {\n    height: \"100%\",\n    marginRight: \"10px\"\n  },\n  pseudoMymessage: {\n    position: \"absolute\",\n    marginTop: \"20px\",\n    color: \"#a2a2a2\",\n    fontSize: \"15px\",\n    marginLeft: \"-40px\"\n  },\n  pseudoIncomingMessage: {\n    position: \"absolute\",\n    marginTop: \"-40px\",\n    color: \"#a2a2a2\",\n    fontSize: \"15px\",\n    marginLeft: \"110px\"\n  },\n  itemIncomingMessage: {\n    position: \"relative\",\n    marginLeft: \"20px\",\n    marginBottom: \"-60px\"\n  },\n  itemMyMessage: {\n    position: \"relative\",\n    marginRight: \"50px\",\n    minHeight: \"0px\"\n  },\n  containerItemMyMessage: {\n    position: \"absolute\",\n    right: \"0%\"\n  }\n};\nlet socket;\n\nconst Chat_component = ({\n  location\n}) => {\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: room,\n    1: setRoom\n  } = useState(\"\");\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState([]);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const ENDPOINT = \"localhost:8080\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = router.query;\n    socket = io(ENDPOINT);\n\n    if (name != undefined && room != undefined) {\n      setName(name);\n      setRoom(room);\n      socket.emit('join', {\n        name,\n        room\n      }, res => {\n        if (res.error) console.log(`error : ${error}`);\n        if (res.users) setUsers(res.users);\n      });\n    }\n\n    return () => {\n      if (name != undefined && room != undefined) {\n        socket.emit('disconnect');\n        socket.disconnect();\n      }\n    };\n  }, [router, ENDPOINT]);\n  useEffect(() => {\n    socket.on('newMessage', message => {\n      setMessages(messages => [...messages, message]);\n    });\n  }, [router]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message != \"\" && room != undefined && name != undefined) {\n      socket.emit('sendMessage', {\n        user: name,\n        text: message\n      }, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  const disconnect = e => {\n    e.preventDefault();\n    socket.emit('disconnect');\n    socket.disconnect();\n    router.push(`/join`);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    style: styles.sub_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    style: styles.topbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: styles.pseudo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    style: styles.pastille,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 46\n    }\n  }, \"\\u2022 \"), name), __jsx(\"img\", {\n    style: styles.close,\n    src: \"/images/close.png\",\n    onClick: e => disconnect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    container: true,\n    style: styles.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, __jsx(ScrollToBottom, {\n    id: \"scrollToBottom\",\n    className: `${CSS_SCROLL}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    style: styles.incomingMessageList,\n    direction: \"column\",\n    spacing: 8,\n    wrap: \"nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, messages.map((message, i) => {\n    if (message.user == name.trim().toLowerCase()) {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `inboxMessage${i}`,\n        style: styles.itemIncomingMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.incomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }\n      }, message.text), __jsx(Grid, {\n        key: `${i}4`,\n        item: true,\n        style: styles.pseudoIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 49\n        }\n      }, message.user)));\n    } else if (message.user == \"admin\") {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `inboxMessage${i}`,\n        style: styles.itemIncomingMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.adminMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }\n      }, message.text), __jsx(Grid, {\n        key: `${i}4`,\n        item: true,\n        style: styles.pseudoIncomingMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 49\n        }\n      }, \"Admin\")));\n    } else {\n      return __jsx(Grid, {\n        item: true,\n        key: i,\n        id: `myMessage${i}`,\n        style: styles.itemMyMessage,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        container: true,\n        key: `${i}2`,\n        style: styles.containerItemMyMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        key: `${i}3`,\n        style: styles.pseudoMymessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 49\n        }\n      }, message.user), __jsx(Grid, {\n        item: true,\n        key: `${i}4`,\n        style: styles.myMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 49\n        }\n      }, message.text)));\n    }\n  })))), __jsx(Users_component, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }), __jsx(Grid, {\n    container: true,\n    style: styles.input_container,\n    fluid: \"true\",\n    diction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, __jsx(\"hr\", {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Message\",\n    multiline: true,\n    rows: 2,\n    variant: \"filled\",\n    style: styles.input,\n    onChange: e => setMessage(e.target.value),\n    value: message,\n    onKeyPress: e => e.key === \"Enter\" ? sendMessage(e) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    id: \"\",\n    label: \"Entrer\",\n    color: \"primary\",\n    size: \"large\",\n    variant: \"contained\",\n    style: styles.button,\n    onClick: e => sendMessage(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, \"Envoyer\"))))));\n};\n\nexport default Chat_component;","map":{"version":3,"sources":["/Users/aouassalim/Desktop/Salim/nodejs_practice/openclassrooms_02/frontend/my-app/components/chat.js"],"names":["Container","TextField","Button","Grid","useEffect","useState","useRouter","io","ScrollToBottom","css","Users_component","CSS_SCROLL","height","overflow","overflowX","styles","container","backgroundColor","position","top","left","transform","borderRadius","textAlign","maxWidth","minWidth","padding","topbar","border","width","pastille","color","pseudo","paddingLeft","marginTop","fontSize","close","right","paddingTop","paddingRight","sub_container","hr","input_container","input","marginRight","button","messages","overflowY","display","flexDirection","incomingMessage","minHeight","adminMessage","myMessage","incomingMessageList","myMessageList","pseudoMymessage","marginLeft","pseudoIncomingMessage","itemIncomingMessage","marginBottom","itemMyMessage","containerItemMyMessage","socket","Chat_component","location","router","name","setName","room","setRoom","setMessages","message","setMessage","users","setUsers","ENDPOINT","query","undefined","emit","res","error","console","log","disconnect","on","sendMessage","e","preventDefault","user","text","push","map","i","trim","toLowerCase","containerItemIncomingMessage","target","value","key"],"mappings":"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","sourcesContent":["import Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router'\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\nimport Users_component from './../components/users';\n\nconst CSS_SCROLL = css({\n    height: 400,\n    overflow: `auto`,\n    overflowX:`hidden`\n});\n\nconst styles = {\n    container: {\n        backgroundColor: \"white\",\n        height: \"570px\",\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        borderRadius: \"6px\",\n        textAlign: \"center\",\n        maxWidth: \"600px\",\n        minWidth: \"20%\",\n        padding: \"0\"\n    },\n    topbar: {\n        position: \"relative\",\n        backgroundColor: \"#3f51b5\",\n        border: \"2px solid white\",\n        borderRadius: \"6px\",\n        height: \"60px\",\n        width: \"100%\",\n    },\n    pastille: {\n        color: \"#a8ffa8\",\n    },\n    pseudo: {\n        color: \"white\",\n        position: \"absolute\",\n        top: \"0%\",\n        left: \"0%\",\n        paddingLeft: \"30px\",\n        marginTop: \"15px\",\n        fontSize: \"20px\"\n    },\n    close: {\n        position: \"absolute\",\n        top: \"0%\",\n        right: \"0%\",\n        height: \"15px\",\n        width: \"15px\",\n        paddingTop: \"5px\",\n        paddingRight: \"5px\"\n    },\n    sub_container: {\n        position: \"absolute\",\n        padding: \"0\"\n    },\n    hr: {\n        padding: \"0\",\n    },\n    input_container: {\n        position: \"relative\",\n        padding: \"0\",\n    },\n    input: {\n        position: \"absolute\",\n        left: \"0%\",\n        width:\"68%\",\n        paddingLeft: \"10px\",\n        marginRight: \"20px\",\n    },\n    button: {\n        position: \"absolute\",\n        right: \"0%\",\n        marginRight: \"10px\",\n        height: \"76px\",\n        width:\"25%\"\n    },\n    messages: {\n        overflowY: \"scroll\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"400px\",\n        overflowX: \"hidden\"\n    },\n    incomingMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"#1982FC\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    adminMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"rgb(236, 236, 236)\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    myMessage: {\n        borderRadius: \"8px\",\n        backgroundColor: \"#43CC47\",\n        minHeight: \"20px\",\n        width: \"100px\",\n        textAlign: \"center\",\n        padding: \"20px 5px 20px 5px\",\n    },\n    incomingMessageList: {\n        height: \"100%\",\n        marginTop: \"5px\"\n    },\n    myMessageList: {\n        height: \"100%\",\n        marginRight: \"10px\"\n    },\n    pseudoMymessage: {\n        position: \"absolute\",\n        marginTop: \"20px\",\n        color: \"#a2a2a2\",\n        fontSize: \"15px\",\n        marginLeft: \"-40px\"\n\n    },\n    pseudoIncomingMessage: {\n        position: \"absolute\",\n        marginTop: \"-40px\",\n        color: \"#a2a2a2\",\n        fontSize: \"15px\",\n        marginLeft: \"110px\"\n    },\n    itemIncomingMessage: {\n        position: \"relative\",\n        marginLeft: \"20px\",\n        marginBottom: \"-60px\"\n    },\n    itemMyMessage: {\n        position: \"relative\",\n        marginRight: \"50px\",\n        minHeight: \"0px\",\n    },\n    containerItemMyMessage: {\n        position: \"absolute\",\n        right: \"0%\"\n    }\n}\n\nlet socket;\n\nconst Chat_component = ({location}) => {\n    const router = useRouter();\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState([]);\n    const [users, setUsers] = useState([])\n    const ENDPOINT = \"localhost:8080\";\n\n    useEffect(() => {\n        const { name,room } = router.query;\n        socket = io(ENDPOINT);\n \n        if((name != undefined) && (room != undefined)){\n            setName(name);\n            setRoom(room);\n\n            socket.emit('join', { name,room }, (res) => {\n                if(res.error)\n                    console.log(`error : ${error}`);\n                if(res.users)\n                    setUsers(res.users);\n\n            })\n        }\n        \n        return () => {\n            if((name != undefined) && (room != undefined)){\n                socket.emit('disconnect');\n                socket.disconnect();\n            }\n        };\n\n    },[router,ENDPOINT]);\n\n    useEffect(()=>{\n        socket.on('newMessage', (message) => {\n            setMessages(messages => [...messages, message]);\n        })\n\n    },[router]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if(message != \"\" && room != undefined && name != undefined){\n            socket.emit('sendMessage', ( {user: name, text: message} ), () => {\n                setMessage('');\n            });\n\n            \n       }\n    }\n\n    const disconnect = (e) => {\n        e.preventDefault();\n\n        socket.emit('disconnect');\n        socket.disconnect();\n        router.push(`/join`)\n    }\n\n    return (<div>\n        <Container style={styles.container}>\n            <Container style={styles.sub_container}>\n                <Container style={styles.topbar}>\n                    <p style={styles.pseudo}><span style={styles.pastille}>• </span>{name}</p>\n                    <img style={styles.close} src=\"/images/close.png\" onClick={(e) => disconnect(e) }>\n                    </img>\n                </Container>\n\n                <Grid container style={styles.messages}>\n                <ScrollToBottom id=\"scrollToBottom\" className={`${CSS_SCROLL}`}>\n\n                    <Grid container style={styles.incomingMessageList} direction=\"column\" spacing={8} wrap=\"nowrap\">\n                            {messages.map((message, i) => {\n                                    if(message.user == name.trim().toLowerCase()){\n                                        return( <Grid item key={i} id={`inboxMessage${i}`} style={styles.itemIncomingMessage} xs={12}>\n                                            <Grid container key={`${i}2`} style={styles.containerItemIncomingMessage}>\n                                    <Grid item key={`${i}3`} style={styles.incomingMessage}>{message.text}</Grid>\n                                                <Grid key={`${i}4`} item style={styles.pseudoIncomingMessage}>{message.user}</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                    else if (message.user == \"admin\"){\n                                        return( <Grid item key={i} id={`inboxMessage${i}`} style={styles.itemIncomingMessage} xs={12}>\n                                            <Grid container key={`${i}2`} style={styles.containerItemIncomingMessage}>\n                                    <Grid item key={`${i}3`} style={styles.adminMessage}>{message.text}</Grid>\n                                                <Grid key={`${i}4`} item style={styles.pseudoIncomingMessage}>Admin</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                    else{\n                                        return (<Grid item  key={i} id={`myMessage${i}`} style={styles.itemMyMessage} xs={12}>\n                                            <Grid item container key={`${i}2`} style={styles.containerItemMyMessage}>\n                                                <Grid item key={`${i}3`} style={styles.pseudoMymessage}>{message.user}</Grid>\n                                                <Grid item key={`${i}4`} style={styles.myMessage}>{message.text}</Grid>\n                                            </Grid>\n                                        </Grid>)\n                                    }\n                                })}\n                    </Grid>\n\n                    </ScrollToBottom>\n\n                </Grid>\n                <Users_component users={users}>\n            </Users_component>\n                <Grid container style={styles.input_container} fluid=\"true\"  diction=\"row\" >\n                    <hr style={styles.hr}></hr>\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Message\"\n                            multiline\n                            rows={2}\n                            variant=\"filled\"\n                            style={styles.input}\n                            onChange={(e) => setMessage(e.target.value)}\n                            value={message}\n                            onKeyPress={(e) => (e.key === \"Enter\") ? sendMessage(e) : null }\n                        />\n                    </Grid>\n              \n                    <Grid item xs={6}>\n                        <Button\n                            id=\"\"\n                            label=\"Entrer\"\n                            color=\"primary\"\n                            size=\"large\"\n                            variant=\"contained\"\n                            style={styles.button}\n                            onClick={(e) => sendMessage(e)}\n                        >Envoyer</Button>\n                    </Grid>\n                    \n                  \n                </Grid>\n            </Container>\n        </Container>\n    </div>)\n};\n\nexport default Chat_component;"]},"metadata":{},"sourceType":"module"}